""" 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль."""


def division(a, b):
    if b == 0:
        print('Деление на ноль')
    else:
        print(a/b)


x, y = float(input('первое число = ')), float(input('второе число = '))
division(x, y)

""" 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой."""


def user_data(**kwargs):
    for val in kwargs.values():
        print(val, end=' ')


user_data(name='Анастасия', lname='Бирченко', bd_city='Москва', live_city='Москва', email='ffff@gmail.com')

""" 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, 
и возвращает сумму наибольших двух аргументов."""


def my_func(x1, x2, x3):
    return sum(sorted([x1, x2, x3])[1:])


print(my_func(2, 1, 4))

""" 4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень."""


# без **
def my_func(a, b):
    if a > 0 > b and isinstance(b, int):
        ans = 1 / a
        for i in range(-b - 1):
            ans *= 1 / a
        print(ans)
    else:
        print('Некорректные данные')


# с **
def my_func_2(a, b):
    print(a ** b if a > 0 > b and isinstance(b, int) else 'Некорректные данные')


x = float(input('x = '))
y = int(input('y = '))

my_func(x, y)
my_func_2(x, y)

""" 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. 
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. 
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к 
полученной ранее сумме и после этого завершить программу."""


def my_sum(st):
    return sum([float(x) for x in st.split(' ')])


print('Для выходя нажмите "q"')
result = 0

while True:
    stroka = input()
    is_out = stroka.find('q')
    if is_out == -1:
        result += my_sum(stroka)
        print(result)
    else:
        if is_out != 0:
            result += my_sum(stroka[:is_out-1])
            print(result)
            break
        else:
            break

""" 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text. 
Продолжить работу над заданием. 
В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. 
Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. 
Необходимо использовать написанную ранее функцию int_func()."""


def int_func(st):
    return st.title()


stroka = input('Введите строку: ')
print(' '.join([int_func(s) for s in stroka.split(' ')]))
